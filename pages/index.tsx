import _ from 'lodash';
import Head from 'next/head';
import Link from 'next/link';
import { useEffect, useState } from 'react';
import { io } from 'socket.io-client';
import styled from 'styled-components';
import { getAllRooms } from '../util/database';

let socket;
export default function Home(props) {
  const [gameRooms, setGameRooms] = useState<
    { name: string; username: string }[]
  >([]);
  function makeid(length: number) {
    let result = '';
    const characters =
      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    const charactersLength = characters.length;
    for (let i = 0; i < length; i++) {
      result += characters.charAt(Math.floor(Math.random() * charactersLength));
    }
    return result;
  }

  useEffect(() => {
    const socketInitializer = async () => {
      await fetch('/api/socket');
      socket = io();
      socket.on('connect', () => {});
      socket.on(
        'display-activeGame',
        (games: [{ name: string; username: string }]) => {
          const room = _.uniqBy(games, 'name');
          setGameRooms(room);
          console.log(games);
        },
      );
    };
    socketInitializer().catch(() => {});
  }, []);
  useEffect(() => {
    const propRooms: [{ name: string; username: string }] = props.rooms;
    const room = _.uniqBy(propRooms, 'name');
    setGameRooms(room);
  }, [props]);
  const link = makeid(30);
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h5>Scribly</h5>
      <div>
        <Link href={'/draw/' + link}>
          <a>create room</a>
        </Link>
      </div>
      <div>
        {gameRooms.map((room, index) => {
          return (
            <div key={room.username}>
              <Link href={'/draw/' + room.name}>
                <a>Room {index + 1}</a>
              </Link>
            </div>
          );
        })}
      </div>
    </div>
  );
}
export async function getServerSideProps() {
  const userRooms = await getAllRooms();
  console.log(userRooms);
  if (userRooms) {
    return {
      props: {
        rooms: userRooms,
      },
    };
  } else {
    return {
      props: {
        rooms: [],
      },
    };
  }
}
